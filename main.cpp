#include <stdlib.h>
#include <string.h>

#include "coder.h"
#include "argumentParser.h"



int main(int argc, const char* argv[]){

    struct Options options = { .decode = 0, .useFile = 0, .help = 0, .fileName = nullptr};

    int parserRes = parseArguments(argc, argv, &options);
    if (parserRes != PARSER_RESULTS::OK){
        return parserError(parserRes);
    }


    if (options.help) {
        printf("----THIS PROGRAM ENCODES AND DECODES USING LZ77 ARCHIVING METHOD----\n\n"

               "Program requires 2 positional arguments\n\n"
               "--encode (-e) flag or --decode (-d) flag -> what program should do\n"
               "FILE_NAME -> name of file to get encoded/decoded\n\n"
               "If program encodes file, the [FILE_NAME].lz77 file is created\n"
               "If program decodes file, the [FILE_NAME].txt file is created\n\n");
        return 0;
    }

    struct Node* result = encodeLZ77("ABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCDABCDEFGHLABCDAABCD");
    printf("%s\n", decodeLZ77(result));
    free(result);
}




/*

char* a = "meow";

+100    0 1 2 3 4 5 6 7 8 9 10                  0x500
        0x500                                   ||
        ^                                       \/
        |                                        meow
        a

        a - 0x500
        *a - ASCII(m)
        &a - 0x100



        strcpy((char*) &a, "12345678");

+100    0 1 2 3 4 5 6 7 8 9 10
        1 2 3 4 5 6 7 8 \0
        ^
        |
        a

        a - ??
        *a - 0x1 ?
        &a - 0x100


*/
